// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

// Request/Response 是示例接口的请求与响应
// - Path 参数通过 struct tag `path:"..."` 绑定
// - JSON 输出/输入通过 `json:"..."` 控制
// - 与 Java 不同，Go 使用导出字段名（首字母大写）才能被序列化
type Request struct {
	Name string `path:"name,options=you|me"`
}

type Response struct {
	Message string `json:"message"`
}

// CreateUserRequest 创建用户请求
// - Username/Password 必填；Email 可为空（指针 *string 表示可空）
type CreateUserRequest struct {
	Username string  `json:"username"`
	Password string  `json:"password"`
	Email    *string `json:"email"`
}

// UpdateUserRequest 更新用户请求
// - ID 通过路径传入，uint64 对应 MySQL 的 bigint unsigned
// - Password/Email 均为可选（指针为 nil 表示不修改）
type UpdateUserRequest struct {
	ID       uint64  `path:"id" json:"id"`
	Password *string `json:"password"`
	Email    *string `json:"email"`
}

// IdPath 用于从路径解析 ID（与 go-zero 的 httpx.Parse/ParsePath 配合）
type IdPath struct {
	ID uint64 `path:"id"`
}

// User 为对外响应实体（不包含敏感字段 password）
type User struct {
	ID       uint64  `json:"id"`
	Username string  `json:"username"`
	Email    *string `json:"email,omitempty"`
}
